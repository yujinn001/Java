import java.util.Arrays;

// 182page
/*
 *     1. 변수 (데이터형)
 *     2. 식별자
 *     3. 연산자 (증감 연산자, 부정연산자, 형변환 연산자, 산술, 비교, 논리, 대입)
	   4. 제어문 (조건문, 반복문, 반복제어문)
	             if , for, while, break
	   -------------------------------------------------------------- 프로그램 언어의 basic
	   5. 관련된 데이터를 묶는 방법
	   6. 관련된 명령문을 묶는 방법
	   -------------------------- + 클래스 ( 데이터 묶음, 명령문, 메소드 묶음) ==> 한개의 프로그램을 완성 (객체지향 형식)
	   ==> 부품 (조립) ==> 레고 조각 ==> 조립
	       게시판, 영화, 예매 ... 영화 사잍,
	       ---------------- 클래스
	   ----------------------------------------------------------- 여러개의 메소드를 만들어서 조립
	  1) 형식, 문법 ==> 응용 (순서)
	   ------------------------
	     오라클 (자바 연동)
	     HTML, CSS (자바 연동)
	     ----------------------JSP,MVC,Spring,Spring-Boot(자바)
	  2) 배열 
	    -----
	      * 같은 데이터형을 여러개 모아서 관리
	      * 메모리 한 곳에 모아서 관리 (연속적인 메모리 구조 : 메모리 크기가 동일)
	                                                --------------- 번호 (인덱스, 첨자이용)를 이용해서 처리
	      * 단점 ) 고정적 (한번 지정하면 => 변경할 수 없다)
 *	                                 -----------  큰 배열의 다시 생성(메모리 누수)
 *        * 종류 ) 1차원 배열(O), 2차원 배열, 다차원 배열, 가변 배열
 *                             ----------------------------- (X)
 *               예) 
 *                  변수 : 한개만 저장 
 *                  ---  여러개 존재 : 1차원 배열
 *                  ---  1차원 배열 여러개 : 2차원 배열
 *                  -------------------------------
 *                    1      2     3
 *                  -------------------------------
 *                    4      5     6
 *                  -------------------------------
 *                    7      8     9
 *                  -------------------------------
 *                  
 *                  -------------------------------
 *                    1     
 *                  -------------------------------
 *                    4      5    
 *                  -------------------------------
 *                    7      8     9
 *                  ------------------------------- 가변형
 *                  ========================================= Application 사용 ==> 컬렉션  (가변)             
 		3) 배열을 선언과 생성 
 		   1. 선언
 		      데이터형[] 배열명;
 		      데이터형 배열명[];
 		      -------------------- 배열은 null(실제 저장 데이터가 저장된 위치(메모리 주소))
 		                           => null일 경우 오류 발생 (NullPointerException)
 		                           => 참조형 데이터
 		      예)
 		         int[] arr;
 		         
 		         Stack
 		           arr
 		         ----------
 		          
 		         ----------
 		4) 초기화 (값을 대입)
 		   연속적인 메모리를 몇개?
 		       => int a;
 		          a =10;
 		   1. 데이터형[] 배열명 ={값,값 ....}; (O)
 		      => 데이터형[] 배열명;
 		         배열명 = new 데이터형[]{값,값...}
 		   2. 데이터형[] 배열명 = new 데이터형[5]; =====> 자동 초기화
 		                     ------
 		                      int ============ 0 (O)
 		                      long =========== 0L
 		                      double ========= 0.0 (O)
 		                      boolean ======== false (좌석 예매)
 		                      클래스 : String == null 		         
 		  3. 생성
 		     int[] arr = new int [5];
 		        arr
 		       ----			--------------------------------
 		      0x100           0   |  0   |  0   |  0   |  0
 		       ----        |--------------------------------
 		                 0X100  0X104  0X108   0X112  0X116
 		                  arr   arr+1   arr+2   arr+3  arr+4
 		                  ---   ------  ------
 		                  100   100+1*4  100+2*4
 		                  -------------------------------------- 일반 기본형과 동일 취급
 		                  값을 변경 : arr[0] =10;
 		                  인덱스 번호는 0부터 시작을 한다
 		                  총갯수 : 배열명.length
 		                  * 배열 범위를 초가하면 오류 발생 : ArrayIndexOutofBoundsException
 		                                              ------------------------------
 		                   for(int i =0; i<arr.length; i++)
 		                                 -------------
 		      ** 인덱스 번호 : 순차적으로 설정
 		         => for이용
 		         => 일반 for: 배열의 데이터값 변경, 조작
 		         => for-each :베열의 데이터 출력하는 경우에 주로 사용		          
 */
/*
 *     변수 : 기본형 (한개 저장)
 *     배열
 *     클래스
 *     --------------------------- 초기화 (초기화가 안된 상태에서는 오류 발생)
 *       => 변수 
 *          ---
 *           = 지역변수 (메소드 안에 선언되는 변수) ==> 메소드에서 사용이 가능 {}이 종료되는 자동으로 사라지는 변수
 *           = 매개변수 : 사용자의 요청을 받는 역할 메소드()
 *         --------------------------------------------------------------------------------------
 *           = 전역변수 : 클래스 전체에서 사용되는 변수(프로그램 종료시까지 사라지지 않는다)
 *               = 인스턴스 변수 
 *               = 공유 변수
 *         --------------------------------------------------------------------------------------
 *         *** 프로그램은 데이터 관리
 */
/*
 *      ^^
 *      1. 데이터 저장
 *      = 메모리에 저장
 *        1) 한개 저장(변수)
 *        2) 같은 데이터 여러개 (배열)
 *        3) 다른 데이터 여러개 (클래스)
 *      = 파일에 저장 (IO)
 *      = 오라클에 저장 (SQL)
 *      
 *      2. 데이터 관리 
 *      = 메소드
 *      = 조작 (연산자, 제어문)
 */
public class 배열선언 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] arr= new int[5];
		arr[0] = 100;
		arr[1] =200;
		arr[2]		=300;
		arr[3] = 400;
		arr[4] =500;
		// for
		/*
		 *  for(int i =0; i<arr.length; i++)
		 *  {
		 *   arr[i]=(i+1)*100
		 *  }
		 *   배열 ==> 이용되는 제어문 for
		 *   
		 */
		for(int i:arr)
		{
			 System.out.print(i+" ");
		}
		System.out.println();
		System.out.println(Arrays.toString(arr)); //모니터링
		/*
		 *   1. 데이터형 결정
		 *   2. 몇개
		 *   3. 초기화
		 *   4. 활용
		 *   5. 출력
		 *   ---------------- 웹 (삭제,조건 검색)===> 이메일 ==> String[]
		 */
	}

}
