/*
 *  연산자 
 *  ----
 *   1) 단항 연산자 
 *        증감 연산자 (++,--)
 *        부정 연산자 (!)
 *        형변환 연산자 (type)
 *   2) 이항 연산자
 *        산술 연산자 (+,-,*,/,%) => 가장 많이 사용되는 연산자
 *        비교 연산자 (==,!=,<,>,<=,>=)
 *        논리 연산자 (&&,||)
 *        대입 연산자 (=,+=,-=)
 *   3) 삼항 연산자
 *       (조건)?값1:값2
 *       
 *    *** 제어문 관련 ==> 부정, 비교, 논리 (조건, 반복) ==> 조건 (true/false) ==>  boolean만 결과값으로 나옴
 *        연산 + 제어
 *        
 *    page 91 (연산자 우선순위) => 비트 연산자 / 쉬프트 연산자 (제외)
 *        단항 연산자 => 산술 연산자 => 비교 연산자 => 논리연산자 => 대입연산자
 *    page 91~92
 *        산술 변환
 *         => 연산은 항상 같은 타입끼리 연산    
 *           ========================== 같은 데이터형으로 변경 후, 연산처리 (자동형변환: 큰데이터형으로 변경)
 *             int + double
 *            ----- double  => double(자동)
 *            
 *            사용자(프로그래머)가 변경 ==> 강제형변환
 *            int + (int)double = int
 *    page 92 : int 이하 데이터형 (byte,char)
 *               byte + byte = int
 *               char + char = int
 *               byte + char = int..
 *              *** int /int = int ==> int /double ==> 소수점 인식
 *    page 93 ==> 94page
 *       단항 연산자
 *          ++, -- 
 *          한개 증가, 한개 감소 ==> 
 *          a++, a = a+1, ++a, a+=1 ==> 1개 증가
 *          a--, a = a-1, --a, a-=1
 *          ** 전치 (++a)
 *             결과값을 대입 ==> 증가된 값 대입
 *          ** 후치 (a++)
 *             결과값을 대입 ==> 대입하고 나중에 증가
 *          int a =10;
 *          System.out.println(a); 10
 *          System.out.println(a++); 10
 *          
 *          int a =10;
 *          int b = ++a;
 *                  ---1
 *                ---2(순서)
 *          int a =10;
 *          int b= a++;
 *               ---1
 *                 ---2 
 *     page 96 (음수/양수) -
 *     int a=10;
 *     a=-a; ====> a=-10
 *     ===============================================
 *     page 97 (산술연산자)
 *     ==> 산술변환이 있다 (데이터형이 같은 것만 연산 => 큰데이터형으로 변경) => 필요시에만 강제로 변환
 *         int + double ==>
 *         ----
 *         double 
 *         
 *         10+10.5
 *         --10
 *         -------> 20.5
 *         
 *         10 +(int) 10.5
 *         ---------------->20
 *         
 *         10 /3 =>3
 *         10/(double)3 => 3.3333..
 *         -----------------------------------------
 *         / (0으로 나눌 수 없다) ==> 조건 (오류처리), 정수 / 정수 => 필요하면 정수를 실수로 변환
 *         % 부호가 왼쪽부호를 따라 간다
 *         *** +, -보다 *,/,%가 우선순위다
 *         예) 5+6*10
 *              ----1
 *            ---2     ==>65
 *            
 *             (5+6)*10 ==> ()최우선순위 연산자
 *             ==> 110
 *          *** 작은 데이터형으로 연산 결과를 받는 경우의 문제점 ==> 오버플로우를 발생할 수 있다 (저장 범위를 벗어난다)
 *              byte b= (byte)300; ==> 127 ==> 44
 *              -----------------
 *              256+44
 *                  --- 32+8+4
 *               (1)0011100
 *               -----------300에 대한 2진법
 *               
 *               b = 00101100
 *                      32+8+4 ==> b=44  
 *           ------------------------------------------------------------------------------------
 *           +,-,* ==> 누적 (장바구니 ==> 물품의 가격계산, 수량)
 *           /, % ==> 통계
 *           산술연산자 ==> 결과값
 *           
 *     page 109 비교연산자 (결과값은 무조건 boolean)
 *           ==, !=, <, >, <=, >= =====> 숫자와 관련 (정수, 실수, 문자)
 *           ------- (정수, 실수, 문자, 논리)
 *           <= (< || ==)
 *           >= (> || ==)
 *           
 *     page 114 논리연산자 (결과값은 무조건 boolean)
 *          && : 범위가 포함
 *               (조건) && (조건) ==> 조건 2개 동시 true일 때 true
 *          || : 범위가 미포함
 *               (조건) || (조건) ==> 조건중에 1개 이상이면 true
 *          *** page 118 효율적인 연산 
 *          &&
 *          (조건) && (조건)
 *          ----
 *           false =================> 다음 조건을 확인없이 false를 출력
 *           
 *          ||
 *           (조건) || (조건)
 *           -----
 *             true =================> 다음 조건을 확인없이 true를 출력
 *      
 *      page 130 삼항 연산자
 *         (조건)? 값1: 값2
 *         ---------
 *            true 
 *          -------------false
 *          
 *      int a = 10;
 *      a% 2==0? "짝수" : "홀수"
 *      
 *      a%2==0?true:false
 *      
 *      a%2==0?'Y':'N'
 *   --------------------------------------------------------
 *     
 *      page 132 대입연산자
 *         = , += , -= , /=
 *         int a=10; 10을 a에 대입
 *         a+= a에 1을 더한값을 저장한다.
 *         ---------- a = a+1;
 *         a-=1; a에 1을 뺀값을 저장한다
 *         ---------- a = a-1;
 *         a/=2; a의 값을 2로 나눈 값을 저장
 *         ---------- a=a/2;
 *         
 *         =======================> a++ , a-- : 여러개 감소, 증가 
 *         a++;
 *         a++;
 *         a++;
 *         a++;
 *         a++;
 *         
 *         a+=5
 *         ------------------------------------------->
 *               
 *               
 *          
 *           
 *         
 *         
 *            
 *            
 */
public class 연산자정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
